@page "/register"
@using Shared
@using Client.Services
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<h1>Register</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Please enter your details</h5>
        <EditForm EditContext="@editContext" OnSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            
            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="RegisterModel.Email" />
                <ValidationMessage For="@(() => RegisterModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="RegisterModel.Password" />
                <ValidationMessage For="@(() => RegisterModel.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirm Password</label>
                <InputText Id="confirmPassword" type="password" class="form-control" @bind-Value="RegisterModel.ConfirmPassword" />
                <ValidationMessage For="@(() => RegisterModel.ConfirmPassword)" />
            </div>
            <button type="submit" class="btn btn-primary">Submit</button>
        </EditForm>
    </div>
</div>

@code {
    private RegisterModel RegisterModel = new();
    private EditContext editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(RegisterModel);
    }

    private async Task HandleRegistration()
    {

        ValidationHelper.ClearAllValidationMessages(editContext);

        var result = await AuthService.Register(RegisterModel);

        if (!result.Successful)
        {
            foreach (var error in result.Errors)
            {
                var correctedPropertyName = error.Property.Substring(0, 1).ToUpper() + error.Property.Substring(1);
                ValidationHelper.AddValidationError(editContext, RegisterModel, correctedPropertyName, error.Message);
            }
        }
        else
        {
            NavigationManager.NavigateTo("/login");
        }
    }
}
